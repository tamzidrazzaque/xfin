{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { component, themeColor } from \"../../constants/colors\";\nimport { useTheme } from \"../../provider/ThemeProvider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar RadioButton = function RadioButton(_ref) {\n  var _ref$value = _ref.value,\n    value = _ref$value === void 0 ? false : _ref$value,\n    onValueChange = _ref.onValueChange,\n    checkedColor = _ref.checkedColor,\n    uncheckedColor = _ref.uncheckedColor,\n    _ref$inverseColor = _ref.inverseColor,\n    inverseColor = _ref$inverseColor === void 0 ? themeColor.white : _ref$inverseColor,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 24 : _ref$size,\n    style = _ref.style;\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  var selectedCheckedColor = checkedColor ? checkedColor : component[theme].checkBox.checkedColor;\n  var selectedUncheckedColor = uncheckedColor ? uncheckedColor : component[theme].checkBox.uncheckedColor;\n  var handleChange = function handleChange() {\n    if (onValueChange) {\n      onValueChange(!value);\n    }\n  };\n  return _jsx(TouchableOpacity, {\n    onPress: handleChange,\n    style: _objectSpread(_objectSpread({}, style), {}, {\n      width: size,\n      height: size,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      borderRadius: size / 2,\n      borderColor: value ? selectedCheckedColor : selectedUncheckedColor,\n      backgroundColor: disabled ? component[theme].checkBox.disabledColor : value ? selectedCheckedColor : \"transparent\",\n      borderWidth: 1\n    }),\n    disabled: disabled,\n    children: value && _jsx(View, {\n      style: {\n        width: size - 4,\n        height: size - 4,\n        borderRadius: (size - 4) / 2,\n        borderWidth: 4,\n        borderColor: disabled ? inverseColor : value ? inverseColor : selectedUncheckedColor,\n        backgroundColor: disabled ? component[theme].checkBox.disabledColor : value ? selectedCheckedColor : \"transparent\"\n      }\n    })\n  });\n};\nexport default RadioButton;","map":{"version":3,"names":["React","TouchableOpacity","View","component","themeColor","useTheme","jsx","_jsx","RadioButton","_ref","_ref$value","value","onValueChange","checkedColor","uncheckedColor","_ref$inverseColor","inverseColor","white","_ref$disabled","disabled","_ref$size","size","style","_useTheme","theme","selectedCheckedColor","checkBox","selectedUncheckedColor","handleChange","onPress","_objectSpread","width","height","alignItems","justifyContent","borderRadius","borderColor","backgroundColor","disabledColor","borderWidth","children"],"sources":["/Users/tamzidrazzaque/Documents/Xfin_testing/node_modules/react-native-rapi-ui/components/RadioButton/RadioButton.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { ColorValue, TouchableOpacity, View, ViewStyle } from \"react-native\";\r\nimport { component, themeColor } from \"../../constants/colors\";\r\nimport { useTheme } from \"../../provider/ThemeProvider\";\r\n\r\ninterface Props {\r\n  value: boolean;\r\n  onValueChange?: (newValue: boolean) => void;\r\n  checkedColor?: ColorValue;\r\n  uncheckedColor?: ColorValue;\r\n  inverseColor?: ColorValue;\r\n  disabled?: boolean;\r\n  style?: ViewStyle;\r\n  size?: number;\r\n}\r\n\r\nconst RadioButton: React.FC<Props> = ({\r\n  value = false,\r\n  onValueChange,\r\n  checkedColor,\r\n  uncheckedColor,\r\n  inverseColor = themeColor.white,\r\n  disabled = false,\r\n  size = 24,\r\n  style,\r\n}) => {\r\n  const { theme } = useTheme();\r\n  const selectedCheckedColor = checkedColor\r\n    ? checkedColor\r\n    : component[theme].checkBox.checkedColor;\r\n  const selectedUncheckedColor = uncheckedColor\r\n    ? uncheckedColor\r\n    : component[theme].checkBox.uncheckedColor;\r\n  const handleChange = () => {\r\n    if (onValueChange) {\r\n      onValueChange(!value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={handleChange}\r\n      style={{\r\n        ...style,\r\n        width: size,\r\n        height: size,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        borderRadius: size / 2,\r\n        borderColor: value ? selectedCheckedColor : selectedUncheckedColor,\r\n        backgroundColor: disabled\r\n          ? component[theme].checkBox.disabledColor\r\n          : value\r\n          ? selectedCheckedColor\r\n          : \"transparent\",\r\n        borderWidth: 1,\r\n      }}\r\n      disabled={disabled}\r\n    >\r\n      {value && (\r\n        <View\r\n          style={{\r\n            width: size - 4,\r\n            height: size - 4,\r\n            borderRadius: (size - 4) / 2,\r\n            borderWidth: 4,\r\n            borderColor: disabled\r\n              ? inverseColor\r\n              : value\r\n              ? inverseColor\r\n              : selectedUncheckedColor,\r\n            backgroundColor: disabled\r\n              ? component[theme].checkBox.disabledColor\r\n              : value\r\n              ? selectedCheckedColor\r\n              : \"transparent\",\r\n          }}\r\n        />\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default RadioButton;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE1B,SAASC,SAAS,EAAEC,UAAU;AAC9B,SAASC,QAAQ;AAAuC,SAAAC,GAAA,IAAAC,IAAA;AAaxD,IAAMC,WAA4B,GAAG,SAA/BA,WAA4BA,CAAAC,IAAA,EAS5B;EAAA,IAAAC,UAAA,GAAAD,IAAA,CARJE,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,KAAK,GAAAA,UAAA;IACbE,aAAa,GAAAH,IAAA,CAAbG,aAAa;IACbC,YAAY,GAAAJ,IAAA,CAAZI,YAAY;IACZC,cAAc,GAAAL,IAAA,CAAdK,cAAc;IAAAC,iBAAA,GAAAN,IAAA,CACdO,YAAY;IAAZA,YAAY,GAAAD,iBAAA,cAAGX,UAAU,CAACa,KAAK,GAAAF,iBAAA;IAAAG,aAAA,GAAAT,IAAA,CAC/BU,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,KAAK,GAAAA,aAAA;IAAAE,SAAA,GAAAX,IAAA,CAChBY,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,EAAE,GAAAA,SAAA;IACTE,KAAK,GAAAb,IAAA,CAALa,KAAK;EAEL,IAAAC,SAAA,GAAkBlB,QAAQ,CAAC,CAAC;IAApBmB,KAAK,GAAAD,SAAA,CAALC,KAAK;EACb,IAAMC,oBAAoB,GAAGZ,YAAY,GACrCA,YAAY,GACZV,SAAS,CAACqB,KAAK,CAAC,CAACE,QAAQ,CAACb,YAAY;EAC1C,IAAMc,sBAAsB,GAAGb,cAAc,GACzCA,cAAc,GACdX,SAAS,CAACqB,KAAK,CAAC,CAACE,QAAQ,CAACZ,cAAc;EAC5C,IAAMc,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzB,IAAIhB,aAAa,EAAE;MACjBA,aAAa,CAAC,CAACD,KAAK,CAAC;IACvB;EACF,CAAC;EAED,OACEJ,IAAA,CAACN,gBAAgB;IACf4B,OAAO,EAAED,YAAa;IACtBN,KAAK,EAAAQ,aAAA,CAAAA,aAAA,KACAR,KAAK;MACRS,KAAK,EAAEV,IAAI;MACXW,MAAM,EAAEX,IAAI;MACZY,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,YAAY,EAAEd,IAAI,GAAG,CAAC;MACtBe,WAAW,EAAEzB,KAAK,GAAGc,oBAAoB,GAAGE,sBAAsB;MAClEU,eAAe,EAAElB,QAAQ,GACrBhB,SAAS,CAACqB,KAAK,CAAC,CAACE,QAAQ,CAACY,aAAa,GACvC3B,KAAK,GACLc,oBAAoB,GACpB,aAAa;MACjBc,WAAW,EAAE;IAAC,EACd;IACFpB,QAAQ,EAAEA,QAAS;IAAAqB,QAAA,EAElB7B,KAAK,IACJJ,IAAA,CAACL,IAAI;MACHoB,KAAK,EAAE;QACLS,KAAK,EAAEV,IAAI,GAAG,CAAC;QACfW,MAAM,EAAEX,IAAI,GAAG,CAAC;QAChBc,YAAY,EAAE,CAACd,IAAI,GAAG,CAAC,IAAI,CAAC;QAC5BkB,WAAW,EAAE,CAAC;QACdH,WAAW,EAAEjB,QAAQ,GACjBH,YAAY,GACZL,KAAK,GACLK,YAAY,GACZW,sBAAsB;QAC1BU,eAAe,EAAElB,QAAQ,GACrBhB,SAAS,CAACqB,KAAK,CAAC,CAACE,QAAQ,CAACY,aAAa,GACvC3B,KAAK,GACLc,oBAAoB,GACpB;MACN;IAAE,CACH;EACF,CACe,CAAC;AAEvB,CAAC;AAED,eAAejB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}