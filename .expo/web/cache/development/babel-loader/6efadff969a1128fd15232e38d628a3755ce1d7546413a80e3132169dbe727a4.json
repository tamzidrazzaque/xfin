{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport Icon from \"@expo/vector-icons/AntDesign\";\nimport { auth } from \"../firebase_config\";\nimport { dataBase } from \"../firebase_config\";\nimport { addDoc, collection } from 'firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Register = function Register(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    name = _useState6[0],\n    setName = _useState6[1];\n  var onSignUp = function onSignUp() {\n    createUserWithEmailAndPassword(auth, email, password).then(function (result) {\n      addDoc(collection(dataBase, \"users\"), {\n        name: name,\n        email: email\n      });\n      console.log(result);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n  return _jsx(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return Keyboard.dismiss();\n    },\n    children: _jsx(KeyboardAvoidingView, {\n      style: styles.container,\n      behavior: \"padding\",\n      children: _jsxs(View, {\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Icon, {\n            name: \"leftcircle\",\n            size: 35,\n            style: {\n              marginBottom: 20\n            }\n          })\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          placeholder: \"Name\",\n          onChangeText: setName\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          placeholder: \"Email\",\n          onChangeText: setEmail\n        }), _jsx(TextInput, {\n          style: styles.textInput,\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          onChangeText: setPassword\n        }), _jsx(TouchableOpacity, {\n          onPress: onSignUp,\n          children: _jsx(Text, {\n            style: styles.buttons,\n            children: \"Register\"\n          })\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttons: {\n    borderWidth: 5,\n    padding: 20,\n    borderColor: 'black',\n    marginTop: 50,\n    marginHorizontal: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  textInput: {\n    borderWidth: 5,\n    padding: 10,\n    borderColor: 'black',\n    marginTop: 10,\n    justifyContent: 'center'\n  }\n});\nexport default Register;","map":{"version":3,"names":["React","useState","StyleSheet","Text","TextInput","Button","TouchableOpacity","View","KeyboardAvoidingView","TouchableWithoutFeedback","Keyboard","createUserWithEmailAndPassword","Icon","auth","dataBase","addDoc","collection","jsx","_jsx","jsxs","_jsxs","Register","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","name","setName","onSignUp","then","result","console","log","catch","error","onPress","dismiss","children","style","styles","container","behavior","goBack","size","marginBottom","textInput","placeholder","onChangeText","secureTextEntry","buttons","create","flex","backgroundColor","alignItems","justifyContent","borderWidth","padding","borderColor","marginTop","marginHorizontal","fontWeight","textAlign"],"sources":["/Users/tamzidrazzaque/Documents/Xfin_testing/auth/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  Button,\n  TouchableOpacity,\n  View,\n  KeyboardAvoidingView,\n  TouchableWithoutFeedback,\n  Keyboard,\n} from 'react-native';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport Icon from 'react-native-vector-icons/AntDesign';\nimport { auth } from '../firebase_config';\nimport { dataBase } from '../firebase_config';\nimport { addDoc, collection } from 'firebase/firestore';\n\n//dont forget to add email already exists\n\nconst Register = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n\n  const onSignUp = () => {\n    createUserWithEmailAndPassword(auth, email, password)\n      .then((result) => {\n        addDoc(collection(dataBase, \"users\"), {\n            name,\n            email\n        });\n        // firebase.firestore().collection(\"users\")\n        //     .doc(auth.currentUser.uid)\n        //     .set({\n        //         name,\n        //         email \n        //     })\n        console.log(result);\n\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  return (\n    <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n      <KeyboardAvoidingView style={styles.container} behavior=\"padding\">\n        <View>\n          <TouchableOpacity onPress={() => navigation.goBack()}>\n            <Icon name=\"leftcircle\" size={35} style={{ marginBottom: 20 }} />\n          </TouchableOpacity>\n          <TextInput\n            style={styles.textInput}\n            placeholder=\"Name\"\n            onChangeText={setName}\n          />\n          <TextInput\n            style={styles.textInput}\n            placeholder=\"Email\"\n            onChangeText={setEmail}\n          />\n          <TextInput\n            style={styles.textInput}\n            placeholder=\"Password\"\n            secureTextEntry={true}\n            onChangeText={setPassword}\n          />\n\n          <TouchableOpacity onPress={onSignUp}>\n            <Text style={styles.buttons}>Register</Text>\n          </TouchableOpacity>\n        </View>\n      </KeyboardAvoidingView>\n    </TouchableWithoutFeedback>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  buttons: {\n    borderWidth: 5,\n    padding: 20,\n    borderColor: 'black',\n    marginTop: 50,\n    marginHorizontal: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  textInput: {\n    borderWidth: 5,\n    padding: 10,\n    borderColor: 'black',\n    marginTop: 10,\n    justifyContent: 'center',\n  },\n});\n\nexport default Register;\n\n\n\n// import React, { Component } from 'react'\n// import { StyleSheet, Text, TextInput, Button, TouchableOpacity, View, KeyboardAvoidingView, TouchableWithoutFeedback, Keyboard } from 'react-native';\n// import { createUserWithEmailAndPassword } from \"firebase/auth\";\n// import Icon from 'react-native-vector-icons/AntDesign';\n// import {auth} from '../firebase_config'\n\n// //should we have linear gradient button?\n \n// export class Register extends Component {\n\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//             email: '',\n//             password: '',\n//             name: '', \n//         }\n//         this.onSignUp = this.onSignUp.bind(this)\n//     }\n\n//     onSignUp(){\n//         const {email, password, name} = this.state;\n//         createUserWithEmailAndPassword(auth, email, password)\n//         .then((result) => {console.log(result)})\n//         .catch((error) => {console.log(error)})\n//     }\n//     render() {\n\n//         return (\n\n//             <TouchableWithoutFeedback onPress={() => Keyboard.dismiss()}>\n\n//                 <KeyboardAvoidingView\n//                     style={styles.container}\n//                     behavior=\"padding\"\n//                 >\n//                     <View>\n                       \n//                         <TouchableOpacity onPress={() => this.props.navigation.goBack()}>\n//                             <Icon\n//                                 name='leftcircle'\n//                                 size = {35}\n//                                 style = {{marginBottom: 20}}\n//                                 />\n                        \n//                         </TouchableOpacity>\n//                         <TextInput\n//                             style={styles.textInput}\n//                             placeholder='Name'\n//                             onChangeText={(name) => this.setState({name})}\n//                         />\n//                         <TextInput\n//                             style={styles.textInput}\n//                             placeholder='Email'\n//                             onChangeText={(email) => this.setState({email  })}\n//                         />\n//                         <TextInput\n//                             style={styles.textInput}\n//                             placeholder='Password'\n//                             secureTextEntry={true}\n//                             onChangeText={(password) => this.setState({password})}\n//                         /> \n\n//                         <TouchableOpacity onPress={() => this.onSignUp()}>\n//                             <Text style={styles.buttons}>Register</Text>\n//                         </TouchableOpacity>\n            \n//                     </View>\n//                 </KeyboardAvoidingView>\n//             </TouchableWithoutFeedback>\n//     )\n//   }\n// }\n// const styles = StyleSheet.create({\n\n\n//     container: {\n//       flex: 1,\n//       backgroundColor: 'white',\n//       alignItems: 'center',\n//       justifyContent: 'center',\n//     },\n\n//     buttons: {\n//         borderWidth: 5,\n//         padding: 20,\n//         borderColor: 'black',\n//         marginTop: 50,\n//         marginHorizontal: 20,\n//         justifyContent: 'center',\n//         alignItems: 'center',\n//         fontWeight: 'bold',\n//         textAlign: 'center',\n//     },\n\n//     textInput: {\n//         borderWidth: 5,\n//         padding: 10,\n//         borderColor: 'black',\n//         marginTop: 10,\n//         justifyContent: 'center',        \n//     },\n\n   \n// });\n\n// export default Register"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}