{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ThemeProvider } from \"react-native-rapi-ui\";\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Choose(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState('NoName'),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"XFin\"\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Explorer\", {\n          id: {\n            name: name\n          }\n        });\n      },\n      children: _jsx(Text, {\n        style: styles.buttons,\n        children: \"eXplorer\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate(\"Finder\", {\n          id: {\n            name: name\n          }\n        });\n      },\n      children: _jsx(Text, {\n        style: styles.buttons,\n        children: \"FINder\"\n      })\n    }), _jsx(Text, {\n      children: \"Type name below: \"\n    }), _jsx(TextInput, {\n      onChangeText: function onChangeText(val) {\n        return setName(val);\n      }\n    }), _jsxs(Text, {\n      children: [\"Your name is \", name]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 40,\n    marginBottom: 19\n  },\n  buttons: {\n    borderWidth: 5,\n    padding: 10,\n    borderColor: 'black',\n    marginTop: 10,\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","TextInput","TouchableOpacity","View","ThemeProvider","React","useState","jsx","_jsx","jsxs","_jsxs","Choose","_ref","navigation","_useState","_useState2","_slicedToArray","name","setName","style","styles","container","children","title","onPress","navigate","id","buttons","onChangeText","val","create","flex","backgroundColor","alignItems","justifyContent","fontWeight","fontSize","marginBottom","borderWidth","padding","borderColor","marginTop"],"sources":["/Users/tamzidrazzaque/Documents/Xfin_testing/screens/Choose.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native';\nimport { ThemeProvider } from \"react-native-rapi-ui\";\nimport React, {useState} from 'react';\n\n\nexport default function Choose({navigation}) {\n    const [name, setName] = useState('NoName');\n    return (\n    \n        <View style={styles.container}>\n          <Text style={styles.title}>XFin</Text>\n\n          <TouchableOpacity onPress={() => navigation.navigate(\"Explorer\", {id: {name}})}>\n            <Text style={styles.buttons}>eXplorer</Text>\n          </TouchableOpacity>\n\n          <TouchableOpacity onPress={() => navigation.navigate(\"Finder\", {id: {name}})}>\n            <Text style={styles.buttons}>FINder</Text>\n          </TouchableOpacity>\n        \n          <Text>Type name below: </Text>\n          \n          <TextInput onChangeText={(val) => setName(val)}></TextInput>\n          \n          <Text>Your name is {name}</Text>\n        </View>\n      );\n    }\n    \n    const styles = StyleSheet.create({\n      container: {\n        flex: 1,\n        backgroundColor: 'white',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      title: {\n        fontWeight: 'bold',\n        fontSize: 40,\n        marginBottom: 19,\n      }, \n      buttons: {\n        borderWidth: 5,\n        padding: 10,\n        borderColor: 'black',\n        marginTop: 10,\n        justifyContent: 'center',\n      },\n    });\n    "],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE5C,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGtC,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAe;EAAA,IAAbC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACtC,IAAAC,SAAA,GAAwBR,QAAQ,CAAC,QAAQ,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnCG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EACpB,OAEIL,KAAA,CAACP,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bd,IAAA,CAACR,IAAI;MAACmB,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAI,CAAM,CAAC,EAEtCd,IAAA,CAACN,gBAAgB;MAACsB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMX,UAAU,CAACY,QAAQ,CAAC,UAAU,EAAE;UAACC,EAAE,EAAE;YAACT,IAAI,EAAJA;UAAI;QAAC,CAAC,CAAC;MAAA,CAAC;MAAAK,QAAA,EAC7Ed,IAAA,CAACR,IAAI;QAACmB,KAAK,EAAEC,MAAM,CAACO,OAAQ;QAAAL,QAAA,EAAC;MAAQ,CAAM;IAAC,CAC5B,CAAC,EAEnBd,IAAA,CAACN,gBAAgB;MAACsB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMX,UAAU,CAACY,QAAQ,CAAC,QAAQ,EAAE;UAACC,EAAE,EAAE;YAACT,IAAI,EAAJA;UAAI;QAAC,CAAC,CAAC;MAAA,CAAC;MAAAK,QAAA,EAC3Ed,IAAA,CAACR,IAAI;QAACmB,KAAK,EAAEC,MAAM,CAACO,OAAQ;QAAAL,QAAA,EAAC;MAAM,CAAM;IAAC,CAC1B,CAAC,EAEnBd,IAAA,CAACR,IAAI;MAAAsB,QAAA,EAAC;IAAiB,CAAM,CAAC,EAE9Bd,IAAA,CAACP,SAAS;MAAC2B,YAAY,EAAE,SAAAA,aAACC,GAAG;QAAA,OAAKX,OAAO,CAACW,GAAG,CAAC;MAAA;IAAC,CAAY,CAAC,EAE5DnB,KAAA,CAACV,IAAI;MAAAsB,QAAA,GAAC,eAAa,EAACL,IAAI;IAAA,CAAO,CAAC;EAAA,CAC5B,CAAC;AAEX;AAEA,IAAMG,MAAM,GAAGrB,UAAU,CAAC+B,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,OAAO;IACxBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDX,KAAK,EAAE;IACLY,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDV,OAAO,EAAE;IACPW,WAAW,EAAE,CAAC;IACdC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,OAAO;IACpBC,SAAS,EAAE,EAAE;IACbP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}