{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"height\", \"backgroundColor\", \"borderColor\", \"leftAction\", \"middleAction\", \"rightAction\", \"leftContent\", \"middleContent\", \"rightContent\", \"leftTextStyle\", \"rightTextStyle\", \"middleTextStyle\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { component } from \"../../constants/colors\";\nimport { useTheme } from \"../../provider/ThemeProvider\";\nimport { Text } from \"../Text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TopNav = function TopNav(_ref) {\n  var _ref$height = _ref.height,\n    height = _ref$height === void 0 ? 64 : _ref$height,\n    backgroundColor = _ref.backgroundColor,\n    borderColor = _ref.borderColor,\n    leftAction = _ref.leftAction,\n    middleAction = _ref.middleAction,\n    rightAction = _ref.rightAction,\n    leftContent = _ref.leftContent,\n    middleContent = _ref.middleContent,\n    rightContent = _ref.rightContent,\n    leftTextStyle = _ref.leftTextStyle,\n    rightTextStyle = _ref.rightTextStyle,\n    middleTextStyle = _ref.middleTextStyle,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useTheme = useTheme(),\n    theme = _useTheme.theme;\n  return _jsxs(View, _objectSpread(_objectSpread({}, rest), {}, {\n    style: {\n      height: height,\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      backgroundColor: backgroundColor ? backgroundColor : component[theme].topNav.backgroundColor,\n      alignItems: \"center\",\n      borderColor: backgroundColor ? borderColor : component[theme].topNav.borderColor,\n      borderBottomWidth: 1\n    },\n    children: [_jsx(TouchableOpacity, {\n      onPress: leftAction,\n      style: {\n        flex: 1,\n        alignItems: \"flex-start\"\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          paddingHorizontal: 20,\n          alignItems: \"flex-start\",\n          justifyContent: \"center\"\n        },\n        children: typeof leftContent == \"string\" ? _jsx(Text, {\n          style: leftTextStyle,\n          fontWeight: \"bold\",\n          size: \"lg\",\n          children: leftContent\n        }) : leftContent\n      })\n    }), _jsx(Pressable, {\n      onPress: middleAction,\n      style: {\n        flex: 4,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          paddingHorizontal: 20,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        children: typeof middleContent == \"string\" ? _jsx(Text, {\n          style: middleTextStyle,\n          fontWeight: \"bold\",\n          size: \"lg\",\n          children: middleContent\n        }) : middleContent\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: rightAction,\n      style: {\n        flex: 1,\n        alignItems: \"flex-end\"\n      },\n      children: _jsx(View, {\n        style: {\n          flex: 1,\n          paddingHorizontal: 20,\n          alignItems: \"flex-end\",\n          justifyContent: \"center\"\n        },\n        children: typeof rightContent == \"string\" ? _jsx(Text, {\n          style: rightTextStyle,\n          fontWeight: \"bold\",\n          size: \"lg\",\n          children: rightContent\n        }) : rightContent\n      })\n    })]\n  }));\n};\nexport default TopNav;","map":{"version":3,"names":["React","Pressable","View","TouchableOpacity","component","useTheme","Text","jsx","_jsx","jsxs","_jsxs","TopNav","_ref","_ref$height","height","backgroundColor","borderColor","leftAction","middleAction","rightAction","leftContent","middleContent","rightContent","leftTextStyle","rightTextStyle","middleTextStyle","rest","_objectWithoutProperties","_excluded","_useTheme","theme","_objectSpread","style","flexDirection","justifyContent","topNav","alignItems","borderBottomWidth","children","onPress","flex","paddingHorizontal","fontWeight","size"],"sources":["/Users/tamzidrazzaque/Documents/Xfin_testing/node_modules/react-native-rapi-ui/components/TopNav/TopNav.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Pressable,\r\n  TextStyle,\r\n  View,\r\n  ViewProps,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { component } from \"../../constants/colors\";\r\nimport { useTheme } from \"../../provider/ThemeProvider\";\r\nimport { Text } from \"../Text\";\r\n\r\ninterface Props extends ViewProps {\r\n  height?: number;\r\n  backgroundColor?: string;\r\n  borderColor?: string;\r\n  leftAction?: VoidFunction;\r\n  middleAction?: VoidFunction;\r\n  rightAction?: VoidFunction;\r\n  leftContent?: string | React.ReactNode;\r\n  rightContent?: string | React.ReactNode;\r\n  middleContent?: string | React.ReactNode;\r\n  leftTextStyle?: TextStyle;\r\n  rightTextStyle?: TextStyle;\r\n  middleTextStyle?: TextStyle;\r\n}\r\n\r\nconst TopNav: React.FC<Props> = ({\r\n  height = 64,\r\n  backgroundColor,\r\n  borderColor,\r\n  leftAction,\r\n  middleAction,\r\n  rightAction,\r\n  leftContent,\r\n  middleContent,\r\n  rightContent,\r\n  leftTextStyle,\r\n  rightTextStyle,\r\n  middleTextStyle,\r\n  ...rest\r\n}) => {\r\n  const { theme } = useTheme();\r\n  return (\r\n    <View\r\n      {...rest}\r\n      style={{\r\n        height: height,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        backgroundColor: backgroundColor\r\n          ? backgroundColor\r\n          : component[theme].topNav.backgroundColor,\r\n        alignItems: \"center\",\r\n        borderColor: backgroundColor\r\n          ? borderColor\r\n          : component[theme].topNav.borderColor,\r\n        borderBottomWidth: 1,\r\n      }}\r\n    >\r\n      <TouchableOpacity\r\n        onPress={leftAction}\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"flex-start\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            paddingHorizontal: 20,\r\n            alignItems: \"flex-start\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {typeof leftContent == \"string\" ? (\r\n            <Text style={leftTextStyle} fontWeight=\"bold\" size=\"lg\">\r\n              {leftContent}\r\n            </Text>\r\n          ) : (\r\n            leftContent\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n      <Pressable\r\n        onPress={middleAction}\r\n        style={{\r\n          flex: 4,\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            paddingHorizontal: 20,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {typeof middleContent == \"string\" ? (\r\n            <Text style={middleTextStyle} fontWeight=\"bold\" size=\"lg\">\r\n              {middleContent}\r\n            </Text>\r\n          ) : (\r\n            middleContent\r\n          )}\r\n        </View>\r\n      </Pressable>\r\n      <TouchableOpacity\r\n        onPress={rightAction}\r\n        style={{\r\n          flex: 1,\r\n          alignItems: \"flex-end\",\r\n        }}\r\n      >\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            paddingHorizontal: 20,\r\n            alignItems: \"flex-end\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          {typeof rightContent == \"string\" ? (\r\n            <Text style={rightTextStyle} fontWeight=\"bold\" size=\"lg\">\r\n              {rightContent}\r\n            </Text>\r\n          ) : (\r\n            rightContent\r\n          )}\r\n        </View>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}