{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { component, useEffect, useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LandingScreen from \"./auth/Landing\";\nimport RegisterScreen from \"./auth/Register\";\nimport LoginScreen, { Login } from \"./auth/Login\";\nimport { auth } from \"./firebase_config\";\nimport MainStack from \"./MainStack\";\nimport { getAuth, onAuthStateChanged, setPersistence } from \"firebase/auth\";\nimport { CardStyleInterpolators } from 'react-navigation-stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var Stack = createNativeStackNavigator();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    Loggedin = _useState2[0],\n    setLoggedin = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    Loaded = _useState4[0],\n    setLoaded = _useState4[1];\n  var user = auth.currentUser;\n  useEffect(function () {\n    var unsubscribe = onAuthStateChanged(auth, function (user) {\n      if (user) {\n        setLoaded(true);\n        setLoggedin(true);\n      } else {\n        setLoaded(true);\n        setLoggedin(false);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  if (!Loaded) {\n    return _jsx(View, {\n      style: styles.loadingContainer,\n      children: _jsx(Text, {\n        children: \"Loading\"\n      })\n    });\n  }\n  if (Loggedin) {\n    return _jsx(MainStack, {});\n  }\n  var config = {\n    animation: 'vertical',\n    config: {\n      stiffness: 1000,\n      damping: 500,\n      mass: 3,\n      overshootClamping: true,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 0.01\n    }\n  };\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"LandingScreen\",\n      children: [_jsx(Stack.Screen, {\n        name: \"LandingScreen\",\n        component: LandingScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"RegisterScreen\",\n        component: RegisterScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"LoginScreen\",\n        component: LoginScreen,\n        options: {\n          transitionSpec: {\n            open: config,\n            close: config\n          }\n        }\n      })]\n    })\n  });\n}\n{}\n{}\n{}\nvar styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","component","useEffect","useState","StatusBar","StyleSheet","Text","TouchableOpacity","View","NavigationContainer","useNavigation","createNativeStackNavigator","LandingScreen","RegisterScreen","LoginScreen","Login","auth","MainStack","getAuth","onAuthStateChanged","setPersistence","CardStyleInterpolators","jsx","_jsx","jsxs","_jsxs","App","Stack","_useState","_useState2","_slicedToArray","Loggedin","setLoggedin","_useState3","_useState4","Loaded","setLoaded","user","currentUser","unsubscribe","style","styles","loadingContainer","children","config","animation","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","Navigator","initialRouteName","Screen","name","options","headerShown","transitionSpec","open","close","create","flex","justifyContent","alignItems"],"sources":["/Users/tamzidrazzaque/Documents/Xfin_testing/App.js"],"sourcesContent":["import React, {component, useEffect, useState} from 'react'\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LandingScreen from './auth/Landing';  \nimport RegisterScreen from './auth/Register';\nimport LoginScreen, { Login } from './auth/Login'\nimport {auth} from './firebase_config'\nimport MainStack from './MainStack';\nimport { getAuth, onAuthStateChanged, setPersistence } from \"firebase/auth\";\nimport { CardStyleInterpolators } from 'react-navigation-stack';\n\n\nexport default function App() {\n\n  const Stack = createNativeStackNavigator();\n  const [Loggedin, setLoggedin] = useState(false)\n  const [Loaded, setLoaded] = useState(false)\n  const user = auth.currentUser;\n  \n\n  useEffect(()=> {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if(user){\n        setLoaded(true)\n        setLoggedin(true)\n\n      } else {\n        setLoaded(true)\n        setLoggedin(false)\n      }\n    })\n    return unsubscribe\n  }, [])\n\n  if (!Loaded){\n    return (\n      <View style={styles.loadingContainer}>\n        <Text>Loading</Text>\n      </View>\n      \n    );\n  }\n  // const [initializing, setInitializing] = useState(true);\n  // const [user, setUser] = useState();\n\n  // // Handle user state changes\n  // function onAuthStateChanged(user) {\n  //   setUser(user);\n  //   if (initializing) setInitializing(false);\n  // }\n\n  // useEffect(() => {\n  //   const subscriber = auth.onAuthStateChanged(onAuthStateChanged);\n  //   return subscriber; // unsubscribe on unmount\n  // }, []);\n\n  // if (initializing) {\n  //   // Return a loading indicator or splash screen here\n  //   return (\n  //     <View style={styles.loadingContainer}>\n  //       <Text>Loading...</Text>\n  //     </View>,\n  //     console.log(\"here\")\n  //   );\n  // }\n\n    if (Loggedin){\n      return (\n        // console.log(user.email),\n        <MainStack/>\n        \n      );\n  } \n  const config = {\n    animation: 'vertical',\n    config: {\n      stiffness: 1000,\n      damping: 500,\n      mass: 3,\n      overshootClamping: true,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 0.01,\n    },\n  };\n    return (\n  \n      <NavigationContainer >\n        <Stack.Navigator initialRouteName='LandingScreen'>\n          <Stack.Screen name='LandingScreen' component={LandingScreen}  options={{headerShown: false}} />\n          <Stack.Screen name=\"RegisterScreen\" component={RegisterScreen}  options={{headerShown: false}}/>\n          <Stack.Screen name=\"LoginScreen\" component={LoginScreen}  options={{transitionSpec: {\n            open: config,\n            close: config,\n          },}}/>\n        </Stack.Navigator>\n      </NavigationContainer>\n          \n      );\n}\n\n\n\n\n\n// export default class App extends Component {\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       loaded: false,\n//     }\n//   }\n//   componentDidMount(){\n\n//   }\n\n//   render() {\n\n//     return (\n//       <View>\n//         <Text>App</Text>\n//       </View>\n//     )\n//   }\n// }\n\n\n\n        {/* <NavigationContainer>\n    \n          <Stack.Navigator initialRouteName='Choose'>\n            <Stack.Screen name = \"Choose\" component = {Choose} options = {{headerShown: true}}/>\n            <Stack.Screen name = \"Finder\" component={Finder}/>\n            <Stack.Screen name = \"Explorer\" component={Explorer}/> */}\n          {/* </Stack.Navigator> */}\n  \n        {/* </NavigationContainer> */}\n\n\nconst styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}